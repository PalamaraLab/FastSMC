name: PyPI

on:
  push:
    branches: stable

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - os: ubuntu-latest
            python-version: 3.8
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build manylinux wheels
      if: matrix.os == 'ubuntu-latest'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2014_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        system-packages: 'boost-devel eigen3-devel zlib-devel cmake'
        pip-wheel-args: '-w ./dist --no-deps'

    - name: Install standard python dependencies
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip wheel setuptools

    - name: Install build-time deps for macOS
      if: matrix.os == 'macos-latest'
      run: brew install cmake boost libomp eigen

    - name: Build wheels for macOS
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pip wheel . -w dist/ --no-deps

    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist


  publish-pyi:
    name: Upload wheels to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Remove non-manylinux wheels
        run: rm dist/*-linux_x86_64.whl

      - name: Publish wheels to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.TEST_PYPI_USER }}
          password: ${{ secrets.TEST_PYPI_PASSWORD }}
          repository_url: https://test.pypi.org/legacy/
