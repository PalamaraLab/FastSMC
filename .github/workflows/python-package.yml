name: PyPI

on:
  push:
    branches: stable

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Build manylinux wheels
      if: matrix.os == 'ubuntu-latest'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2014_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        system-packages: 'boost-devel eigen3-devel zlib-devel cmake'
        pip-wheel-args: '-w ./dist --no-deps'

    - name: Install cibuildwheel
      if: matrix.os == 'macos-latest'
      run: python -m pip install cibuildwheel==1.7.1

    - name: Install build-time deps for macOS
      if: matrix.os == 'macos-latest'
      run: brew install cmake boost libomp eigen

    - name: Build wheels for macOS
      if: matrix.os == 'macos-latest'
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64

    - name: Upload wheels
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist


  publish-pyi:
    name: Upload wheels to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v1
        with:
          name: dist

      - name: Remove non-manylinux wheels
        run: rm dist/*-linux_x86_64.whl

      - name: Publish wheels to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
